{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACAD,EAAAE,OAAOC,KAAK,CACRC,MAAO,QACPC,SAAU,gBACVC,SAAU,QACVC,qBAAsB,IACtBC,QAAS,IAGb,MAAMC,EAASC,SAASC,cAAc,SACtCF,EAAOG,iBAAiB,UAMxB,SAAsBC,GACpBA,EAAMC,iBACNC,GAAcF,EAAMG,cAAcC,SAASC,MAAMC,MACjDC,GAASP,EAAMG,cAAcC,SAASI,KAAKF,MAC3CG,GAAUT,EAAMG,cAAcC,SAASM,OAAOJ,MAIhD,WACI,IAAIK,EAAeT,EACnB,IAAK,IAAIU,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAChCC,EAAcD,EAAGD,GACdG,MAAK,EAACtB,SAAEA,EAAUa,MAAAU,MACjB5B,EAAAE,OAAO2B,QAAQ,uBAAqBJ,QAAUG,MAAU,IAEzDE,OAAM,EAACzB,SAAEA,EAAUa,MAAAa,MAClB/B,EAAAE,OAAO8B,QAAQ,sBAAoBP,QAAQM,MAAU,IAErDP,GAAgBJ,EAChBX,EAAOwB,O,CAdfC,E,IATF,IAAInB,EAAa,GACbK,EAAQ,GACRE,EAAS,GA0Bb,SAASI,EAAcrB,EAAU8B,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEhC,EAAUa,MAAAiB,IAEpBG,EAAO,C,SAAEjC,EAAUa,MAAAiB,GAAQ,GAE5BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nNotify.init({\n    width: '560px',\n    position: 'center-center',\n    distance: '100px',\n    cssAnimationDuration: 2000,\n    opacity: 1,\n  });\n  \nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nlet firstDelay = '';\nlet delay = '';\nlet amount = '';\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  firstDelay = +event.currentTarget.elements.delay.value;\n  delay = +event.currentTarget.elements.step.value;\n  amount = +event.currentTarget.elements.amount.value;\n  rasePromise();\n}\n\nfunction rasePromise() {\n    let currentDelay = firstDelay;\n    for (let i = 1; i <= amount; i += 1) {\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n        })\n          currentDelay += delay;\n          formEl.reset();\n    }\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$iQIUW","parcelRequire","Notify","init","width","position","distance","cssAnimationDuration","opacity","$47d4ff9957288465$var$formEl","document","querySelector","addEventListener","event","preventDefault","$47d4ff9957288465$var$firstDelay","currentTarget","elements","delay","value","$47d4ff9957288465$var$delay","step","$47d4ff9957288465$var$amount","amount","currentDelay","i","$47d4ff9957288465$var$createPromise","then","delay1","success","catch","delay2","failure","reset","$47d4ff9957288465$var$rasePromise","delay3","Promise","resolve","reject","setTimeout","Math","random"],"version":3,"file":"03-promises.23f72adb.js.map"}